/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const PrintingHistoryLazyImport = createFileRoute('/printing-history')()
const PrintLazyImport = createFileRoute('/print')()
const IndexLazyImport = createFileRoute('/')()
const PrintConfigPageLazyImport = createFileRoute('/print/config-page')()

// Create/Update Routes

const PrintingHistoryLazyRoute = PrintingHistoryLazyImport.update({
  id: '/printing-history',
  path: '/printing-history',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/printing-history.lazy').then((d) => d.Route),
)

const PrintLazyRoute = PrintLazyImport.update({
  id: '/print',
  path: '/print',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/print.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const PrintConfigPageLazyRoute = PrintConfigPageLazyImport.update({
  id: '/config-page',
  path: '/config-page',
  getParentRoute: () => PrintLazyRoute,
} as any).lazy(() =>
  import('./routes/print.config-page.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/print': {
      id: '/print'
      path: '/print'
      fullPath: '/print'
      preLoaderRoute: typeof PrintLazyImport
      parentRoute: typeof rootRoute
    }
    '/printing-history': {
      id: '/printing-history'
      path: '/printing-history'
      fullPath: '/printing-history'
      preLoaderRoute: typeof PrintingHistoryLazyImport
      parentRoute: typeof rootRoute
    }
    '/print/config-page': {
      id: '/print/config-page'
      path: '/config-page'
      fullPath: '/print/config-page'
      preLoaderRoute: typeof PrintConfigPageLazyImport
      parentRoute: typeof PrintLazyImport
    }
  }
}

// Create and export the route tree

interface PrintLazyRouteChildren {
  PrintConfigPageLazyRoute: typeof PrintConfigPageLazyRoute
}

const PrintLazyRouteChildren: PrintLazyRouteChildren = {
  PrintConfigPageLazyRoute: PrintConfigPageLazyRoute,
}

const PrintLazyRouteWithChildren = PrintLazyRoute._addFileChildren(
  PrintLazyRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/print': typeof PrintLazyRouteWithChildren
  '/printing-history': typeof PrintingHistoryLazyRoute
  '/print/config-page': typeof PrintConfigPageLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/print': typeof PrintLazyRouteWithChildren
  '/printing-history': typeof PrintingHistoryLazyRoute
  '/print/config-page': typeof PrintConfigPageLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/print': typeof PrintLazyRouteWithChildren
  '/printing-history': typeof PrintingHistoryLazyRoute
  '/print/config-page': typeof PrintConfigPageLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/print' | '/printing-history' | '/print/config-page'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/print' | '/printing-history' | '/print/config-page'
  id: '__root__' | '/' | '/print' | '/printing-history' | '/print/config-page'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  PrintLazyRoute: typeof PrintLazyRouteWithChildren
  PrintingHistoryLazyRoute: typeof PrintingHistoryLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  PrintLazyRoute: PrintLazyRouteWithChildren,
  PrintingHistoryLazyRoute: PrintingHistoryLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/print",
        "/printing-history"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/print": {
      "filePath": "print.lazy.tsx",
      "children": [
        "/print/config-page"
      ]
    },
    "/printing-history": {
      "filePath": "printing-history.lazy.tsx"
    },
    "/print/config-page": {
      "filePath": "print.config-page.lazy.tsx",
      "parent": "/print"
    }
  }
}
ROUTE_MANIFEST_END */
